---
AWSTemplateFormatVersion: "2010-09-09"

Description: "**WARNING** You will be billed for the AWS resources used if you create a stack from this template"

Metadata:
  About:
    Description: "Story Teller - Deployment Pipeline"
  Author:
    Description: "Stuart Fox"

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Github Config"
        Parameters:
        - GitHubRepo
        - GitHubBranch
        - GitHubUser
        - GitHubToken
      - Label:
          default: "Route53 Hosted Zone"
        Parameters:
          - WebsiteName
          - APIName
          - DomainName
          - HostedZone

Parameters:
  GitHubRepo:
    Type: String
    Default: storyteller
  GitHubBranch:
    Type: String
    Default: main
  GitHubToken:
    Type: String
    NoEcho: true
  GitHubUser:
    Type: String
    Default: stuartbfox1972
  HostedZone:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone
  WebsiteName:
    Type: String
    Default: "storyteller"
    Description: "Website Hostname"
    AllowedPattern: "[a-zA-Z0-9\\-]*"
  APIName:
    Type: String
    Default: "st-api"
    Description: "API Endpoint Name"
    AllowedPattern: "[a-zA-Z0-9\\-]*"
  DomainName:
    Type: String
    Description: "Domain Name - Nasty requirement to type in the HostedZone domain (sorry)"
    AllowedPattern: "[a-zA-Z0-9\\-\\.]*"

Resources:
  TagBasedGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub "${AWS::StackName}ResourceGroup"
      Description: "A group that is created via CFN"
      ResourceQuery:
        Type:
          "TAG_FILTERS_1_0" 
        Query:
          ResourceTypeFilters: 
            - "AWS::AllSupported" 
          TagFilters:
            - 
              Key: "stack-name"
              Values: 
                - !Sub "${AWS::StackName}"
                - !Sub "${AWS::StackName}-infra"

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - !Sub arn:aws:s3:::${LambdaBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource:
                  - !Sub arn:aws:s3:::${StaticAssetsBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:DeleteObject

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
        - Key: "purpose"
          Value: "artifact-bucket"

  StaticAssetsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
        - Key: "purpose"
          Value: "static-assets-bucket"
      LifecycleConfiguration:
        Rules:
          - Id: DeletePollyMP3After1Day
            Prefix: "rendered/"
            Status: "Enabled"
            ExpirationInDays: 1

  LambdaBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
        - Key: "purpose"
          Value: "lambda-bucket"

  BuildAndCopyLambda:
    Type: AWS::CodeBuild::Project
    Properties:
      TimeoutInMinutes: 5
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: lambdas/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildServiceRole

  BuildAndCopyStaticContent:
    Type: AWS::CodeBuild::Project
    Properties:
      TimeoutInMinutes: 5
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: static/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Tags:
        - Key: "stack-name"
          Value: !Sub ${AWS::StackName}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: DownloadSource
          Actions:
            - Name: DownloadSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: DownloadSource
              RunOrder: 1
        - Name: DeployLambda
          Actions:
            - Name: ZipAndCopyLambdas
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildAndCopyLambda
                EnvironmentVariables: !Sub '[{"name": "LambdaBucket",
                                        "value":"${LambdaBucket}",
                                        "type":"PLAINTEXT"
                                        },
                                       {"name": "LambdaVersion",
                                        "value":"#{codepipeline.PipelineExecutionId}",
                                        "type":"PLAINTEXT"
                                       }]'
              InputArtifacts:
                - Name: DownloadSource
              RunOrder: 2
        - Name: DeployInfra
          Actions:
            - Name: DeployInfra
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 3
              InputArtifacts:
                - Name: DownloadSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                StackName: !Sub "${AWS::StackName}-infra"
                TemplatePath: "DownloadSource::cloudformation/infra.yaml"
                ParameterOverrides: !Sub |
                  {
                    "HostedZone": "${HostedZone}",
                    "WebsiteName": "${WebsiteName}",
                    "DomainName": "${DomainName}",
                    "APIName": "${APIName}",
                    "LambdaBucket": "${LambdaBucket}",
                    "LambdaVersion": "#{codepipeline.PipelineExecutionId}",
                    "StaticAssetsBucket": "${StaticAssetsBucket}"
                  }
        - Name: DeployStaticContent
          Actions:
            - Name: CopyStaticContent
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildAndCopyStaticContent
                EnvironmentVariables: !Sub '[{"name": "StaticAssetsBucket",
                                        "value":"${StaticAssetsBucket}",
                                        "type":"PLAINTEXT"
                                        }, {"name": "StackName",
                                        "value":"${AWS::StackName}",
                                        "type":"PLAINTEXT"
                                        }]'
              InputArtifacts:
                - Name: DownloadSource
              RunOrder: 3

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
