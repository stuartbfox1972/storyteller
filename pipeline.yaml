---
AWSTemplateFormatVersion: "2010-09-09"

Description: "**WARNING** You will be billed for the AWS resources used if you create a stack from this template"

Metadata:
  About:
    Description: "Story Teller - Deployment Pipeline"
  Author:
    Description: "Stuart Fox"

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Networking"
        Parameters:
        - Vpc
        - PrivSubnet1
        - PrivSubnet2
        - PubSubnet1
        - PubSubnet2
      - Label:
          default: "Github Config"
        Parameters:
        - GitHubRepo
        - GitHubBranch
        - GitHubUser
        - GitHubToken
      - Label:
          default: "Route53 Hosted Zone"
        Parameters:
          - UseHostedZone
          - WebsiteName
          - DomainName
          - HostedZone
      - Label:
          default: "Fargate Autoscaling Parameters"
        Parameters:
          - MinContainers
          - MaxContainers
          - AutoScalingTargetValue

Parameters:
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: "VPC where cache and database instances will be placed"
  PrivSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: "Private Subnet Id where ECS nodes instance will be placed"
  PrivSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: "Private Subnet Id where ECS nodes instance will be placed"
  PubSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: "Public Subnet Id where the ALB will be placed"
  PubSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: "Public Subnet Id where the ALB will be placed"
  GitHubRepo:
    Type: String
    Default: aws-caching-demo
  GitHubBranch:
    Type: String
    Default: master
  GitHubToken:
    Type: String
    NoEcho: true
  GitHubUser:
    Type: String
    Default: stuartbfox1972
  UseHostedZone:
    Type: String
    AllowedValues:
      - Yes
      - No
  HostedZone:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone to alias the ALB into
  WebsiteName:
    Type: String
    Default: "storyteller"
    Description: "Hostname"
    AllowedPattern: "[a-zA-Z0-9\\-]*"
  DomainName:
    Type: String
    Description: "Domain Name - Nasty requirement to type in the HostedZone domain (sorry)"
    AllowedPattern: "[a-zA-Z0-9\\-\\.]*"
  MinContainers:
    Type: Number
    Default: 1
  MaxContainers:
    Type: Number
    Default: 20
  AutoScalingTargetValue:
    Type: Number
    Default: 60

Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action: "*"
        
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  DockerBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - $(aws ecr get-login --no-include-email)
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
            build:
              commands:
                - docker build --tag "$IMAGE_URI" --tag "${REPOSITORY_URI}:latest" .
            post_build:
              commands:
                - docker push "$IMAGE_URI"
                - docker push "${REPOSITORY_URI}:latest"
                - printf '[{"name":"webapp","imageUri":"%s"}]' "$IMAGE_URI" > imagedefinitions.json
          artifacts:
            files: imagedefinitions.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: App
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: BuildDocker
          Actions:
            - Name: BuildDocker
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DockerBuild
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BO
              RunOrder: 2
        - Name: DeployInfra
          Actions:
            - Name: DeployInfra
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              RunOrder: 3
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: InfraDeployOutput
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                StackName: !Sub "${AWS::StackName}-infra"
                TemplatePath: "App::infra.yaml"
                ParameterOverrides: !Sub |
                  {
                    "UseHostedZone": "${UseHostedZone}",
                    "HostedZone": "${HostedZone}",
                    "WebsiteName": "${WebsiteName}",
                    "DomainName": "${DomainName}",
                    "Vpc": "${Vpc}",
                    "PrivSubnet1": "${PrivSubnet1}",
                    "PrivSubnet2": "${PrivSubnet2}",
                    "PubSubnet1": "${PubSubnet1}",
                    "PubSubnet2": "${PubSubnet2}",
                    "DockerRepo": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}",
                    "MinContainers": "${MinContainers}",
                    "MaxContainers": "${MaxContainers}",
                    "AutoScalingTargetValue": "${AutoScalingTargetValue}"
                  }
        - Name: DeployToECS
          Actions:
            - Name: DeployToECS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              InputArtifacts:
                - Name: BO
              Configuration:
                ClusterName: !Sub "${AWS::StackName}-ECSCluster"
                ServiceName: !Sub "${AWS::StackName}-ECSService"
                FileName: "imagedefinitions.json"
              RunOrder: 4

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
